package com.pddstudio.highlightjs.utils

import com.pddstudio.highlightjs.models.Language

object ExtensionUtil {
    private val extToLangMap = mapOf<String, Language>(
            "1c"           to  Language._1C,
            "abnf"         to  Language.ABNF,
            "accesslog"    to  Language.ACCESS_LOGS,
            "ada"          to  Language.ADA,
            "armasm"       to  Language.ARM_ASSEMBLER,
            "arm"          to  Language.ARM_ASSEMBLER,
            "avrasm"       to  Language.AVR_ASSEMBLER,
            "apache"       to  Language.APACHE,
            "apacheconf"   to  Language.APACHE,
            "as"           to  Language.ACTION_SCRIPT,
            "applescript"  to  Language.APPLE_SCRIPT,
            "osascript"    to  Language.APPLE_SCRIPT,
            "asciidoc"     to  Language.ASCII_DOC,
            "adoc"         to  Language.ASCII_DOC,
            "aspectj"      to  Language.ASPECT_J,
            "autohotkey"   to  Language.AUTO_HOTKEY,
            "autoit"       to  Language.AUTO_IT,
            "axapta"       to  Language.AXAPTA,
            "bash"         to  Language.BASH,
            "sh"           to  Language.SHELL,
            "zsh"          to  Language.ZSH,
            "basic"        to  Language.BASIC,
            "bnf"          to  Language.BNF,
            "bf"           to  Language.BRAINFUCK,
            "brainfuck"    to  Language.BRAINFUCK,
            "cs"           to  Language.C_SHARP,
            "csharp"       to  Language.C_SHARP,
            "cpp"          to  Language.C_PLUS_PLUS,
            "c"            to  Language.C_PLUS_PLUS,
            "cc"           to  Language.C_PLUS_PLUS,
            "h"            to  Language.C_PLUS_PLUS,
            "c++"          to  Language.C_PLUS_PLUS,
            "h++"          to  Language.C_PLUS_PLUS,
            "hpp"          to  Language.C_PLUS_PLUS,
            "cal"          to  Language.C_AL,
            "cls"          to  Language.CACHE_OBJECT_SCRIPT,
            "cos"          to  Language.CACHE_OBJECT_SCRIPT,
            "cmake"        to  Language.C_MAKE,
            "cmake.in"     to  Language.C_MAKE,
            "coq"          to  Language.COQ,
            "csp"          to  Language.CSP,
            "css"          to  Language.CSS,
            "capnp"        to  Language.CAPTAIN_PROTO,
            "capnproto"    to  Language.CAPTAIN_PROTO,
            "chaos"        to  Language.CHAOS,
            "clean"        to  Language.CLEAN,
            "clojure"      to  Language.CLOJURE,
            "clj"          to  Language.CLOJURE,
            "coffeescript" to  Language.COFFEE_SCRIPT,
            "coffee"       to  Language.COFFEE_SCRIPT,
            "iced"         to  Language.COFFEE_SCRIPT,
            "cson"         to  Language.COFFEE_SCRIPT,
            "cpc"          to  Language.CPCDOSC_PLUS,
            "crmsh"        to  Language.CRMSH,
            "crm"          to  Language.CRMSH,
            "pcmk"         to  Language.CRMSH,
            "crystal"      to  Language.CRYSTAL,
            "cr"           to  Language.CRYSTAL,
            "cypher"       to  Language.CYPHER_NEO4J,
            "cql"          to  Language.CYPHER_NEO4J,
            "d"            to  Language.D,
            "dns"          to  Language.DNS_ZONE_FILE,
            "zone"         to  Language.DNS_ZONE_FILE,
            "bind"         to  Language.DNS_ZONE_FILE,
            "dos"          to  Language.DOS,
            "bat"          to  Language.BATCH,
            "cmd"          to  Language.DOS,
            "dart"         to  Language.DART,
            "delphi"       to  Language.DELPHI,
            "dpr"          to  Language.DELPHI,
            "dfm"          to  Language.DELPHI,
            "pas"          to  Language.DELPHI,
            "pascal"       to  Language.DELPHI,
            "freepascal"   to  Language.DELPHI,
            "lazarus"      to  Language.DELPHI,
            "lpr"          to  Language.DELPHI,
            "lfm"          to  Language.DELPHI,
            "diff"         to  Language.DIFF,
            "patch"        to  Language.DIFF,
            "django"       to  Language.DJANGO,
            "jinja"        to  Language.DJANGO,
            "dockerfile"   to  Language.DOCKER_FILE,
            "docker"       to  Language.DOCKER_FILE,
            "dsconfig"     to  Language.DSCONFIG,
            "dts"          to  Language.DTS,
            "dust"         to  Language.DUST,
            "dst"          to  Language.DUST,
            "dylan"        to  Language.DYLAN,
            "ebnf"         to  Language.EBNF,
            "elixir"       to  Language.ELIXIR,
            "elm"          to  Language.ELM,
            "erlang"       to  Language.ERLANG,
            "erl"          to  Language.ERLANG,
            "excel"        to  Language.EXCEL,
            "xls"          to  Language.EXCEL,
            "xlsx"         to  Language.EXCEL

    )

    fun getLanguageByExtension(extension: String): Language =
            extToLangMap[extension] ?: Language.AUTO_DETECT
}